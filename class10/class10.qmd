---
title: "class10: Halloween Mini-Project"
author: "Vivian Pham"
format: gfm
---

```{r}
#install webshot for pdf rendering
#webshot::install_phantomjs()
```

# 1. Importing candy data

```{r}
#candy_file <- "candy-data.csv"
#head(candy_file)
candy = read.csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/candy-power-ranking/candy-data.csv", row.names=1)
head(candy)
```

## Q1. How many different candy types are in this dataset?

```{r}
dim(candy)
```

Answer: There are 85 different candy types in this dataset.

## Q2. How many fruity candy types are in the dataset?

```{r}
sum(candy$fruity)
```

Answer: There are 38 fruity candy types in the dataset. 

# 2. What is your favorate candy?

```{r}
candy["Twix", ]$winpercent
```

## Q3. What is your favorite candy in the dataset and what is it’s winpercent value?

```{r}
candy["Dum Dums", ]$winpercent
```

Answer: My favorite candy in the dataset is "Dum Dums" and it's winpercent value is 39.46056.

## Q4. What is the winpercent value for “Kit Kat”?

```{r}
candy["Kit Kat", ]$winpercent
```

The winpercent value for "Kit Kat" is 76.7686.

## Q5. What is the winpercent value for “Tootsie Roll Snack Bars”?

```{r}
candy["Tootsie Roll Snack Bars", ]$winpercent
```

Answer: The winpercent value for “Tootsie Roll Snack Bars” is 49.6535.

```{r}
#install.packages("skimr")
library("skimr")
skim(candy)
```

## Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?

Answer: The winpercent variable looks to be on a different scale to the majority of the other variables in the dataset. 

## Q7. What do you think a zero and one represent for the candy$chocolate column?

Answer: For the candy$chocolate column, the zero and one represent whether the candy contains chocolate (1) or does not have chocolate (0). 

## Q8. Plot a histogram of winpercent values.

```{r}
hist(candy$winpercent)
```

## Q9. Is the distribution of winpercent values symmetrical?

Answer: No, the distribution of winpercent values is not symmetrical - the distribution is right-skewed. 

## Q10. Is the center of the distribution above or below 50%?

Answer: The center of the distribution is below 50%.

## Q11. On average is chocolate candy higher or lower ranked than fruit candy?

```{r}
chocolate_avg <- mean(candy$winpercent[as.logical(candy$chocolate)])
chocolate_avg
fruity_avg <- mean(candy$winpercent[as.logical(candy$fruity)])
fruity_avg
```

Answer: On average, chocolate candy is higher ranked than fruit candy.

## Q12. Is this difference statistically significant?

```{r}
t.test(candy$winpercent[as.logical(candy$chocolate)], candy$winpercent[as.logical(candy$fruity)])
```

Answer: The p-value of 2.871e-08 is less than the significance level of 0.05; this difference is statistically different. 

# 3. Overall Candy Rankings

## Q13. What are the five least liked candy types in this set?

```{r}
head(candy[order(candy$winpercent),], n=5)
```

Answer: The five least liked candy types in this set are Nik L Nip, Boston Baked Beans, Chiclets, Super Bubble, and Jawbusters.

## Q14. What are the top 5 all time favorite candy types out of this set?

```{r}
#approach 1
tail(candy[order(candy$winpercent),], n=5)
#approach 2
library(dplyr)
candy %>% arrange(winpercent) %>% tail(5)
# I prefer approach 1 because it's much simpler as it uses base R functions. 
```

Answer: The top 5 all time favorite candy types out of this set are Snickers, Kit Kat, Twix, Reese's Miniatures, and Reese's Peanut Butter cup. 

## Q15. Make a first barplot of candy ranking based on winpercent values.

```{r}
library(ggplot2)

ggplot(candy) + 
  aes(winpercent, rownames(candy)) +
  geom_col()
```

## Q16. This is quite ugly, use the reorder() function to get the bars sorted by winpercent?

```{r}
ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy),winpercent)) +
  geom_col()
```

```{r}
my_cols=rep("black", nrow(candy))
my_cols[as.logical(candy$chocolate)] = "chocolate"
my_cols[as.logical(candy$bar)] = "brown"
my_cols[as.logical(candy$fruity)] = "pink"
```

```{r}
ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy),winpercent)) +
  geom_col(fill=my_cols) 
```

## Q17. What is the worst ranked chocolate candy?

Answer: Sixlets is the worst ranked chocolate candy. 

## Q18. What is the best ranked fruity candy?

Answer: Starburst is the best ranked fruity candy.

# 4. Taking a look at pricepercent

```{r}
library(ggrepel)

# How about a plot of price vs win
ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols) + 
  geom_text_repel(col=my_cols, size=3.3, max.overlaps = 5)
```

## Q19. Which candy type is the highest ranked in terms of winpercent for the least money - i.e. offers the most bang for your buck?

Answer: Reese's Miniatures is the highest ranked in terms of winpercent for the least money.

## Q20. What are the top 5 most expensive candy types in the dataset and of these which is the least popular?

```{r}
ord <- order(candy$pricepercent, decreasing = TRUE)
head( candy[ord,c(11,12)], n=5 )
```

Answer: The top 5 most expensive candy types in the dataset are Nik L Nip, Nestle Smarties, Ring pop, Hershey's Krackel, and Hershey's Milk Chocolate. Of these, Nik L Nip is the least popular. 

## Q21. Make a barplot again with geom_col() this time using pricepercent and then improve this step by step, first ordering the x-axis by value and finally making a so called “dot chat” or “lollipop” chart by swapping geom_col() for geom_point() + geom_segment().

```{r}
# Make a lollipop chart of pricepercent
ggplot(candy) +
  aes(pricepercent, reorder(rownames(candy), pricepercent)) +
  geom_segment(aes(yend = reorder(rownames(candy), pricepercent), 
                   xend = 0), col="gray40") +
    geom_point()
```

# 5. Exploring the correlation structure

```{r}
library(corrplot)
```

```{r}
cij <- cor(candy)
corrplot(cij)
```

## Q22. Examining this plot what two variables are anti-correlated (i.e. have minus values)?

Answer: Chocolate and fruity are the two variables in this plot that are anti-correlated. 

## Q23. Similarly, what two variables are most positively correlated?

Answer: Chocolate and bar are the two variables in this plot that are most positively correlated.

# 6. Principal Component Analysis

```{r}
pca <- prcomp(candy, scale=TRUE)
summary(pca)
```

```{r}
plot(pca$rotation[,1])
```

```{r}
plot(pca$x[,1:2], col=my_cols, pch=16)
```

```{r}
# Make a new data-frame with our PCA results and candy data
my_data <- cbind(candy, pca$x[,1:3])
```

```{r}
p <- ggplot(my_data) + 
        aes(x=PC1, y=PC2, 
            size=winpercent/100,  
            text=rownames(my_data),
            label=rownames(my_data)) +
        geom_point(col=my_cols)

p
```

```{r}
library(ggrepel)

p + geom_text_repel(size=3.3, col=my_cols, max.overlaps = 7)  + 
  theme(legend.position = "none") +
  labs(title="Halloween Candy PCA Space",
       subtitle="Colored by type: chocolate bar (dark brown), chocolate other (light brown), fruity (red), other (black)",
       caption="Data from 538")
```

```{r}
library(plotly)
```

```{r}
ggplotly(p)
```

```{r}
par(mar=c(8,4,2,2))
barplot(pca$rotation[,1], las=2, ylab="PC1 Contribution")
```

## Q24. What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you?

Answer: Original variables "fruity", "hard", and "pluribus" are picked up strongly by PC1 in the positive direction. These make sense because many people enjoy fruit-flavored candies, prefer that their candy is not melted, and like to buy candy in bulk. 
